{"hash":"56863d0b1cb9645e23bbe0390e2868e8f20f4ddbc40f351c9feaea8bc649a53f","types":[{"exports":["CarouselConfig","CarouselItem","NgCustomCarousel"],"facadeModuleId":"C:\\Users\\MuhammadAwais\\OneDrive - Royal Cyber Inc\\Desktop\\Projects\\Angular\\ng-custom-carousal\\ng-custom-carousel\\dist\\custom-carousel\\tmp-typings\\ng-custom-carousel.d.ts","isDynamicEntry":false,"isEntry":true,"isImplicitEntry":false,"moduleIds":["C:/Users/MuhammadAwais/OneDrive - Royal Cyber Inc/Desktop/Projects/Angular/ng-custom-carousal/ng-custom-carousel/dist/custom-carousel/tmp-typings/lib/custom-carousel.d.ts","C:\\Users\\MuhammadAwais\\OneDrive - Royal Cyber Inc\\Desktop\\Projects\\Angular\\ng-custom-carousal\\ng-custom-carousel\\dist\\custom-carousel\\tmp-typings\\ng-custom-carousel.d.ts"],"name":"ng-custom-carousel.d","type":"chunk","dynamicImports":[],"fileName":"index.d.ts","implicitlyLoadedBefore":[],"importedBindings":{"@angular/core":["OnInit","OnDestroy","*"]},"imports":["@angular/core"],"modules":{"C:/Users/MuhammadAwais/OneDrive - Royal Cyber Inc/Desktop/Projects/Angular/ng-custom-carousal/ng-custom-carousel/dist/custom-carousel/tmp-typings/lib/custom-carousel.d.ts":{"code":"interface CarouselItem {\n    id: string | number;\n    image?: string;\n    title?: string;\n    description?: string;\n    link?: string;\n    [key: string]: any;\n}\ninterface CarouselConfig {\n    autoplay?: boolean;\n    autoplaySpeed?: number;\n    showArrows?: boolean;\n    showIndicators?: boolean;\n    showTitle?: boolean;\n    showDescription?: boolean;\n    infinite?: boolean;\n    responsive?: boolean;\n    height?: string;\n    width?: string;\n}\ndeclare class NgCustomCarousel implements OnInit, OnDestroy {\n    items: _angular_core.InputSignal<CarouselItem[]>;\n    config: _angular_core.InputSignal<CarouselConfig>;\n    slideChange: _angular_core.OutputEmitterRef<{\n        currentIndex: number;\n        item: CarouselItem;\n    }>;\n    carouselClick: _angular_core.OutputEmitterRef<CarouselItem>;\n    private autoplayInterval?;\n    private cdr;\n    currentIndex: _angular_core.WritableSignal<number>;\n    isTransitioning: _angular_core.WritableSignal<boolean>;\n    progressWidth: _angular_core.Signal<number>;\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    next(): void;\n    previous(): void;\n    goToSlide(index: number): void;\n    trackByFn(index: number, item: CarouselItem): string | number;\n    onItemClick(item: CarouselItem): void;\n    private setupAutoplay;\n    private resetAutoplay;\n    private clearAutoplay;\n    static ɵfac: _angular_core.ɵɵFactoryDeclaration<NgCustomCarousel, never>;\n    static ɵcmp: _angular_core.ɵɵComponentDeclaration<NgCustomCarousel, \"ng-custom-carousel\", never, { \"items\": { \"alias\": \"items\"; \"required\": false; \"isSignal\": true; }; \"config\": { \"alias\": \"config\"; \"required\": false; \"isSignal\": true; }; }, { \"slideChange\": \"slideChange\"; \"carouselClick\": \"carouselClick\"; }, never, never, true, never>;\n}","originalLength":1904,"removedExports":[],"renderedExports":["CarouselItem","CarouselConfig","NgCustomCarousel"],"renderedLength":1746},"C:\\Users\\MuhammadAwais\\OneDrive - Royal Cyber Inc\\Desktop\\Projects\\Angular\\ng-custom-carousal\\ng-custom-carousel\\dist\\custom-carousel\\tmp-typings\\ng-custom-carousel.d.ts":{"code":null,"originalLength":123,"removedExports":[],"renderedExports":[],"renderedLength":0}},"referencedFiles":[],"code":"import * as _angular_core from '@angular/core';\nimport { OnInit, OnDestroy } from '@angular/core';\n\ninterface CarouselItem {\n    id: string | number;\n    image?: string;\n    title?: string;\n    description?: string;\n    link?: string;\n    [key: string]: any;\n}\ninterface CarouselConfig {\n    autoplay?: boolean;\n    autoplaySpeed?: number;\n    showArrows?: boolean;\n    showIndicators?: boolean;\n    showTitle?: boolean;\n    showDescription?: boolean;\n    infinite?: boolean;\n    responsive?: boolean;\n    height?: string;\n    width?: string;\n}\ndeclare class NgCustomCarousel implements OnInit, OnDestroy {\n    items: _angular_core.InputSignal<CarouselItem[]>;\n    config: _angular_core.InputSignal<CarouselConfig>;\n    slideChange: _angular_core.OutputEmitterRef<{\n        currentIndex: number;\n        item: CarouselItem;\n    }>;\n    carouselClick: _angular_core.OutputEmitterRef<CarouselItem>;\n    private autoplayInterval?;\n    private cdr;\n    currentIndex: _angular_core.WritableSignal<number>;\n    isTransitioning: _angular_core.WritableSignal<boolean>;\n    progressWidth: _angular_core.Signal<number>;\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    next(): void;\n    previous(): void;\n    goToSlide(index: number): void;\n    trackByFn(index: number, item: CarouselItem): string | number;\n    onItemClick(item: CarouselItem): void;\n    private setupAutoplay;\n    private resetAutoplay;\n    private clearAutoplay;\n    static ɵfac: _angular_core.ɵɵFactoryDeclaration<NgCustomCarousel, never>;\n    static ɵcmp: _angular_core.ɵɵComponentDeclaration<NgCustomCarousel, \"ng-custom-carousel\", never, { \"items\": { \"alias\": \"items\"; \"required\": false; \"isSignal\": true; }; \"config\": { \"alias\": \"config\"; \"required\": false; \"isSignal\": true; }; }, { \"slideChange\": \"slideChange\"; \"carouselClick\": \"carouselClick\"; }, never, never, true, never>;\n}\n\nexport { NgCustomCarousel };\nexport type { CarouselConfig, CarouselItem };\n","map":null,"preliminaryFileName":"index.d.ts","sourcemapFileName":null}],"fesm2022":[{"exports":["NgCustomCarousel"],"facadeModuleId":"C:\\Users\\MuhammadAwais\\OneDrive - Royal Cyber Inc\\Desktop\\Projects\\Angular\\ng-custom-carousal\\ng-custom-carousel\\dist\\custom-carousel\\tmp-esm2022\\ng-custom-carousel.js","isDynamicEntry":false,"isEntry":true,"isImplicitEntry":false,"moduleIds":["C:/Users/MuhammadAwais/OneDrive - Royal Cyber Inc/Desktop/Projects/Angular/ng-custom-carousal/ng-custom-carousel/dist/custom-carousel/tmp-esm2022/lib/custom-carousel.js","C:/Users/MuhammadAwais/OneDrive - Royal Cyber Inc/Desktop/Projects/Angular/ng-custom-carousal/ng-custom-carousel/dist/custom-carousel/tmp-esm2022/public-api.js","C:\\Users\\MuhammadAwais\\OneDrive - Royal Cyber Inc\\Desktop\\Projects\\Angular\\ng-custom-carousal\\ng-custom-carousel\\dist\\custom-carousel\\tmp-esm2022\\ng-custom-carousel.js"],"name":"ng-custom-carousel","type":"chunk","dynamicImports":[],"fileName":"ng-custom-carousel.mjs","implicitlyLoadedBefore":[],"importedBindings":{"@angular/core":["input","output","inject","ChangeDetectorRef","signal","computed","*","Component"],"@angular/common":["CommonModule","*"]},"imports":["@angular/core","@angular/common"],"modules":{"C:/Users/MuhammadAwais/OneDrive - Royal Cyber Inc/Desktop/Projects/Angular/ng-custom-carousal/ng-custom-carousel/dist/custom-carousel/tmp-esm2022/lib/custom-carousel.js":{"code":"class NgCustomCarousel {\n    // Signal-based inputs\n    items = input([], ...(ngDevMode ? [{ debugName: \"items\" }] : []));\n    config = input({\n        autoplay: true,\n        autoplaySpeed: 5000,\n        showArrows: true,\n        showIndicators: true,\n        showTitle: true,\n        showDescription: true,\n        infinite: true,\n        responsive: true,\n        height: '400px',\n        width: '100%'\n    }, ...(ngDevMode ? [{ debugName: \"config\" }] : []));\n    // Signal-based outputs\n    slideChange = output();\n    carouselClick = output();\n    autoplayInterval;\n    cdr = inject(ChangeDetectorRef);\n    // Internal signals\n    currentIndex = signal(0, ...(ngDevMode ? [{ debugName: \"currentIndex\" }] : []));\n    isTransitioning = signal(false, ...(ngDevMode ? [{ debugName: \"isTransitioning\" }] : []));\n    // Computed signals\n    progressWidth = computed(() => {\n        if (!this.config().autoplay || this.items().length <= 1)\n            return 0;\n        return ((this.currentIndex() + 1) / this.items().length) * 100;\n    }, ...(ngDevMode ? [{ debugName: \"progressWidth\" }] : []));\n    ngOnInit() {\n        this.setupAutoplay();\n    }\n    ngOnDestroy() {\n        this.clearAutoplay();\n    }\n    next() {\n        if (this.items().length <= 1)\n            return;\n        this.isTransitioning.set(true);\n        const nextIndex = this.config().infinite && this.currentIndex() === this.items().length - 1\n            ? 0\n            : Math.min(this.currentIndex() + 1, this.items().length - 1);\n        this.goToSlide(nextIndex);\n    }\n    previous() {\n        if (this.items().length <= 1)\n            return;\n        this.isTransitioning.set(true);\n        const prevIndex = this.config().infinite && this.currentIndex() === 0\n            ? this.items().length - 1\n            : Math.max(this.currentIndex() - 1, 0);\n        this.goToSlide(prevIndex);\n    }\n    goToSlide(index) {\n        if (index < 0 || index >= this.items().length || index === this.currentIndex())\n            return;\n        this.currentIndex.set(index);\n        this.slideChange.emit({ currentIndex: index, item: this.items()[index] });\n        // Reset autoplay progress\n        if (this.config().autoplay) {\n            this.resetAutoplay();\n        }\n        // Reset transition state after animation\n        setTimeout(() => {\n            this.isTransitioning.set(false);\n        }, 500);\n    }\n    trackByFn(index, item) {\n        return item.id;\n    }\n    onItemClick(item) {\n        this.carouselClick.emit(item);\n    }\n    setupAutoplay() {\n        if (!this.config().autoplay || this.items().length <= 1)\n            return;\n        this.autoplayInterval = window.setInterval(() => {\n            this.next();\n        }, this.config().autoplaySpeed);\n    }\n    resetAutoplay() {\n        this.clearAutoplay();\n        this.setupAutoplay();\n    }\n    clearAutoplay() {\n        if (this.autoplayInterval) {\n            clearInterval(this.autoplayInterval);\n            this.autoplayInterval = undefined;\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: NgCustomCarousel, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.1.0\", version: \"20.1.7\", type: NgCustomCarousel, isStandalone: true, selector: \"ng-custom-carousel\", inputs: { items: { classPropertyName: \"items\", publicName: \"items\", isSignal: true, isRequired: false, transformFunction: null }, config: { classPropertyName: \"config\", publicName: \"config\", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { slideChange: \"slideChange\", carouselClick: \"carouselClick\" }, ngImport: i0, template: \"<div class=\\\"ng-carousel-container\\\" [style.width]=\\\"config().width\\\" [style.height]=\\\"config().height\\\">\\r\\n  <!-- Carousel Wrapper -->\\r\\n  <div class=\\\"ng-carousel-wrapper\\\" \\r\\n       [style.transform]=\\\"'translateX(' + (-currentIndex() * 100) + '%)'\\\"\\r\\n       [style.transition]=\\\"isTransitioning() ? 'transform 0.5s ease-in-out' : 'none'\\\">\\r\\n    <div class=\\\"ng-carousel-slide\\\" \\r\\n         *ngFor=\\\"let item of items(); trackBy: trackByFn\\\"\\r\\n         [style.background-image]=\\\"item.image ? 'url(' + item.image + ')' : 'none'\\\">\\r\\n      <div class=\\\"ng-carousel-content\\\" *ngIf=\\\"config().showTitle || config().showDescription\\\">\\r\\n        <h3 *ngIf=\\\"config().showTitle && item.title\\\" class=\\\"ng-carousel-title\\\">\\r\\n          {{ item.title }}\\r\\n        </h3>\\r\\n        <p *ngIf=\\\"config().showDescription && item.description\\\" class=\\\"ng-carousel-description\\\">\\r\\n          {{ item.description }}\\r\\n        </p>\\r\\n        <a *ngIf=\\\"item.link\\\" [href]=\\\"item.link\\\" class=\\\"ng-carousel-link\\\">Learn More</a>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- Navigation Arrows -->\\r\\n  <div *ngIf=\\\"config().showArrows && items().length > 1\\\" class=\\\"ng-carousel-arrows\\\">\\r\\n    <button class=\\\"ng-carousel-arrow ng-carousel-arrow-prev\\\" \\r\\n            (click)=\\\"previous()\\\" \\r\\n            [disabled]=\\\"!config().infinite && currentIndex() === 0\\\">\\r\\n      <svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\">\\r\\n        <path d=\\\"M15 18l-6-6 6-6\\\"/>\\r\\n      </svg>\\r\\n    </button>\\r\\n    <button class=\\\"ng-carousel-arrow ng-carousel-arrow-next\\\" \\r\\n            (click)=\\\"next()\\\" \\r\\n            [disabled]=\\\"!config().infinite && currentIndex() === items().length - 1\\\">\\r\\n      <svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\">\\r\\n        <path d=\\\"M9 18l6-6-6-6\\\"/>\\r\\n      </svg>\\r\\n    </button>\\r\\n  </div>\\r\\n\\r\\n  <!-- Indicators -->\\r\\n  <div *ngIf=\\\"config().showIndicators && items().length > 1\\\" class=\\\"ng-carousel-indicators\\\">\\r\\n    <button *ngFor=\\\"let item of items(); let i = index\\\" \\r\\n            class=\\\"ng-carousel-indicator\\\"\\r\\n            [class.active]=\\\"i === currentIndex()\\\"\\r\\n            (click)=\\\"goToSlide(i)\\\"\\r\\n            [attr.aria-label]=\\\"'Go to slide ' + (i + 1)\\\">\\r\\n    </button>\\r\\n  </div>\\r\\n\\r\\n  <!-- Progress Bar for Autoplay -->\\r\\n  <div *ngIf=\\\"config().autoplay && items().length > 1\\\" class=\\\"ng-carousel-progress\\\">\\r\\n    <div class=\\\"ng-carousel-progress-bar\\\" \\r\\n         [style.width]=\\\"progressWidth() + '%'\\\"\\r\\n         [style.transition]=\\\"'width ' + config().autoplaySpeed + 'ms linear'\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n</div> \", styles: [\".ng-carousel-container{position:relative;overflow:hidden;border-radius:8px;box-shadow:0 4px 20px #0000001a}.ng-carousel-wrapper{display:flex;transition:transform .5s ease-in-out;height:100%}.ng-carousel-slide{min-width:100%;height:100%;background-size:cover;background-position:center;background-repeat:no-repeat;position:relative;display:flex;align-items:center;justify-content:center}.ng-carousel-content{text-align:center;color:#fff;padding:2rem;background:#00000080;border-radius:8px;-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px);max-width:80%}.ng-carousel-title{font-size:2rem;font-weight:700;margin:0 0 1rem;text-shadow:2px 2px 4px rgba(0,0,0,.7)}.ng-carousel-description{font-size:1.1rem;margin:0 0 1.5rem;line-height:1.6;text-shadow:1px 1px 2px rgba(0,0,0,.7)}.ng-carousel-link{display:inline-block;padding:.75rem 1.5rem;background:#007bff;color:#fff;text-decoration:none;border-radius:25px;font-weight:500;transition:all .3s ease;border:2px solid transparent}.ng-carousel-link:hover{background:#0056b3;transform:translateY(-2px);box-shadow:0 4px 15px #007bff66}.ng-carousel-arrows{position:absolute;top:50%;left:0;right:0;transform:translateY(-50%);display:flex;justify-content:space-between;padding:0 1rem;pointer-events:none}.ng-carousel-arrow{width:48px;height:48px;border:none;border-radius:50%;background:#ffffffe6;color:#333;cursor:pointer;display:flex;align-items:center;justify-content:center;transition:all .3s ease;pointer-events:auto;box-shadow:0 2px 10px #0003}.ng-carousel-arrow:hover:not(:disabled){background:#fff;transform:scale(1.1);box-shadow:0 4px 20px #0000004d}.ng-carousel-arrow:disabled{opacity:.5;cursor:not-allowed}.ng-carousel-indicators{position:absolute;bottom:1rem;left:50%;transform:translate(-50%);display:flex;gap:.5rem;z-index:10}.ng-carousel-indicator{width:12px;height:12px;border:none;border-radius:50%;background:#ffffff80;cursor:pointer;transition:all .3s ease}.ng-carousel-indicator:hover{background:#fffc;transform:scale(1.2)}.ng-carousel-indicator.active{background:#fff;transform:scale(1.3)}.ng-carousel-progress{position:absolute;top:0;left:0;right:0;height:3px;background:#ffffff4d;z-index:10}.ng-carousel-progress-bar{height:100%;background:linear-gradient(90deg,#007bff,#00d4ff);border-radius:0 2px 2px 0}@media (max-width: 768px){.ng-carousel-content{padding:1.5rem;max-width:90%}.ng-carousel-title{font-size:1.5rem}.ng-carousel-description{font-size:1rem}.ng-carousel-arrow{width:40px;height:40px}.ng-carousel-arrows{padding:0 .5rem}}@media (max-width: 480px){.ng-carousel-content{padding:1rem;max-width:95%}.ng-carousel-title{font-size:1.25rem}.ng-carousel-arrow{width:36px;height:36px}}\\n\"], dependencies: [{ kind: \"ngmodule\", type: CommonModule }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: NgCustomCarousel, decorators: [{\n            type: Component,\n            args: [{ selector: 'ng-custom-carousel', standalone: true, imports: [CommonModule], template: \"<div class=\\\"ng-carousel-container\\\" [style.width]=\\\"config().width\\\" [style.height]=\\\"config().height\\\">\\r\\n  <!-- Carousel Wrapper -->\\r\\n  <div class=\\\"ng-carousel-wrapper\\\" \\r\\n       [style.transform]=\\\"'translateX(' + (-currentIndex() * 100) + '%)'\\\"\\r\\n       [style.transition]=\\\"isTransitioning() ? 'transform 0.5s ease-in-out' : 'none'\\\">\\r\\n    <div class=\\\"ng-carousel-slide\\\" \\r\\n         *ngFor=\\\"let item of items(); trackBy: trackByFn\\\"\\r\\n         [style.background-image]=\\\"item.image ? 'url(' + item.image + ')' : 'none'\\\">\\r\\n      <div class=\\\"ng-carousel-content\\\" *ngIf=\\\"config().showTitle || config().showDescription\\\">\\r\\n        <h3 *ngIf=\\\"config().showTitle && item.title\\\" class=\\\"ng-carousel-title\\\">\\r\\n          {{ item.title }}\\r\\n        </h3>\\r\\n        <p *ngIf=\\\"config().showDescription && item.description\\\" class=\\\"ng-carousel-description\\\">\\r\\n          {{ item.description }}\\r\\n        </p>\\r\\n        <a *ngIf=\\\"item.link\\\" [href]=\\\"item.link\\\" class=\\\"ng-carousel-link\\\">Learn More</a>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- Navigation Arrows -->\\r\\n  <div *ngIf=\\\"config().showArrows && items().length > 1\\\" class=\\\"ng-carousel-arrows\\\">\\r\\n    <button class=\\\"ng-carousel-arrow ng-carousel-arrow-prev\\\" \\r\\n            (click)=\\\"previous()\\\" \\r\\n            [disabled]=\\\"!config().infinite && currentIndex() === 0\\\">\\r\\n      <svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\">\\r\\n        <path d=\\\"M15 18l-6-6 6-6\\\"/>\\r\\n      </svg>\\r\\n    </button>\\r\\n    <button class=\\\"ng-carousel-arrow ng-carousel-arrow-next\\\" \\r\\n            (click)=\\\"next()\\\" \\r\\n            [disabled]=\\\"!config().infinite && currentIndex() === items().length - 1\\\">\\r\\n      <svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\">\\r\\n        <path d=\\\"M9 18l6-6-6-6\\\"/>\\r\\n      </svg>\\r\\n    </button>\\r\\n  </div>\\r\\n\\r\\n  <!-- Indicators -->\\r\\n  <div *ngIf=\\\"config().showIndicators && items().length > 1\\\" class=\\\"ng-carousel-indicators\\\">\\r\\n    <button *ngFor=\\\"let item of items(); let i = index\\\" \\r\\n            class=\\\"ng-carousel-indicator\\\"\\r\\n            [class.active]=\\\"i === currentIndex()\\\"\\r\\n            (click)=\\\"goToSlide(i)\\\"\\r\\n            [attr.aria-label]=\\\"'Go to slide ' + (i + 1)\\\">\\r\\n    </button>\\r\\n  </div>\\r\\n\\r\\n  <!-- Progress Bar for Autoplay -->\\r\\n  <div *ngIf=\\\"config().autoplay && items().length > 1\\\" class=\\\"ng-carousel-progress\\\">\\r\\n    <div class=\\\"ng-carousel-progress-bar\\\" \\r\\n         [style.width]=\\\"progressWidth() + '%'\\\"\\r\\n         [style.transition]=\\\"'width ' + config().autoplaySpeed + 'ms linear'\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n</div> \", styles: [\".ng-carousel-container{position:relative;overflow:hidden;border-radius:8px;box-shadow:0 4px 20px #0000001a}.ng-carousel-wrapper{display:flex;transition:transform .5s ease-in-out;height:100%}.ng-carousel-slide{min-width:100%;height:100%;background-size:cover;background-position:center;background-repeat:no-repeat;position:relative;display:flex;align-items:center;justify-content:center}.ng-carousel-content{text-align:center;color:#fff;padding:2rem;background:#00000080;border-radius:8px;-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px);max-width:80%}.ng-carousel-title{font-size:2rem;font-weight:700;margin:0 0 1rem;text-shadow:2px 2px 4px rgba(0,0,0,.7)}.ng-carousel-description{font-size:1.1rem;margin:0 0 1.5rem;line-height:1.6;text-shadow:1px 1px 2px rgba(0,0,0,.7)}.ng-carousel-link{display:inline-block;padding:.75rem 1.5rem;background:#007bff;color:#fff;text-decoration:none;border-radius:25px;font-weight:500;transition:all .3s ease;border:2px solid transparent}.ng-carousel-link:hover{background:#0056b3;transform:translateY(-2px);box-shadow:0 4px 15px #007bff66}.ng-carousel-arrows{position:absolute;top:50%;left:0;right:0;transform:translateY(-50%);display:flex;justify-content:space-between;padding:0 1rem;pointer-events:none}.ng-carousel-arrow{width:48px;height:48px;border:none;border-radius:50%;background:#ffffffe6;color:#333;cursor:pointer;display:flex;align-items:center;justify-content:center;transition:all .3s ease;pointer-events:auto;box-shadow:0 2px 10px #0003}.ng-carousel-arrow:hover:not(:disabled){background:#fff;transform:scale(1.1);box-shadow:0 4px 20px #0000004d}.ng-carousel-arrow:disabled{opacity:.5;cursor:not-allowed}.ng-carousel-indicators{position:absolute;bottom:1rem;left:50%;transform:translate(-50%);display:flex;gap:.5rem;z-index:10}.ng-carousel-indicator{width:12px;height:12px;border:none;border-radius:50%;background:#ffffff80;cursor:pointer;transition:all .3s ease}.ng-carousel-indicator:hover{background:#fffc;transform:scale(1.2)}.ng-carousel-indicator.active{background:#fff;transform:scale(1.3)}.ng-carousel-progress{position:absolute;top:0;left:0;right:0;height:3px;background:#ffffff4d;z-index:10}.ng-carousel-progress-bar{height:100%;background:linear-gradient(90deg,#007bff,#00d4ff);border-radius:0 2px 2px 0}@media (max-width: 768px){.ng-carousel-content{padding:1.5rem;max-width:90%}.ng-carousel-title{font-size:1.5rem}.ng-carousel-description{font-size:1rem}.ng-carousel-arrow{width:40px;height:40px}.ng-carousel-arrows{padding:0 .5rem}}@media (max-width: 480px){.ng-carousel-content{padding:1rem;max-width:95%}.ng-carousel-title{font-size:1.25rem}.ng-carousel-arrow{width:36px;height:36px}}\\n\"] }]\n        }] });","originalLength":15411,"removedExports":[],"renderedExports":["NgCustomCarousel"],"renderedLength":15133},"C:/Users/MuhammadAwais/OneDrive - Royal Cyber Inc/Desktop/Projects/Angular/ng-custom-carousal/ng-custom-carousel/dist/custom-carousel/tmp-esm2022/public-api.js":{"code":"/*\n * Public API Surface of custom-carousel\n */","originalLength":125,"removedExports":[],"renderedExports":[],"renderedLength":47},"C:\\Users\\MuhammadAwais\\OneDrive - Royal Cyber Inc\\Desktop\\Projects\\Angular\\ng-custom-carousal\\ng-custom-carousel\\dist\\custom-carousel\\tmp-esm2022\\ng-custom-carousel.js":{"code":"/**\n * Generated bundle index. Do not edit.\n */","originalLength":124,"removedExports":[],"renderedExports":[],"renderedLength":47}},"referencedFiles":[],"code":"import * as i0 from '@angular/core';\nimport { input, output, inject, ChangeDetectorRef, signal, computed, Component } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nclass NgCustomCarousel {\n    // Signal-based inputs\n    items = input([], ...(ngDevMode ? [{ debugName: \"items\" }] : []));\n    config = input({\n        autoplay: true,\n        autoplaySpeed: 5000,\n        showArrows: true,\n        showIndicators: true,\n        showTitle: true,\n        showDescription: true,\n        infinite: true,\n        responsive: true,\n        height: '400px',\n        width: '100%'\n    }, ...(ngDevMode ? [{ debugName: \"config\" }] : []));\n    // Signal-based outputs\n    slideChange = output();\n    carouselClick = output();\n    autoplayInterval;\n    cdr = inject(ChangeDetectorRef);\n    // Internal signals\n    currentIndex = signal(0, ...(ngDevMode ? [{ debugName: \"currentIndex\" }] : []));\n    isTransitioning = signal(false, ...(ngDevMode ? [{ debugName: \"isTransitioning\" }] : []));\n    // Computed signals\n    progressWidth = computed(() => {\n        if (!this.config().autoplay || this.items().length <= 1)\n            return 0;\n        return ((this.currentIndex() + 1) / this.items().length) * 100;\n    }, ...(ngDevMode ? [{ debugName: \"progressWidth\" }] : []));\n    ngOnInit() {\n        this.setupAutoplay();\n    }\n    ngOnDestroy() {\n        this.clearAutoplay();\n    }\n    next() {\n        if (this.items().length <= 1)\n            return;\n        this.isTransitioning.set(true);\n        const nextIndex = this.config().infinite && this.currentIndex() === this.items().length - 1\n            ? 0\n            : Math.min(this.currentIndex() + 1, this.items().length - 1);\n        this.goToSlide(nextIndex);\n    }\n    previous() {\n        if (this.items().length <= 1)\n            return;\n        this.isTransitioning.set(true);\n        const prevIndex = this.config().infinite && this.currentIndex() === 0\n            ? this.items().length - 1\n            : Math.max(this.currentIndex() - 1, 0);\n        this.goToSlide(prevIndex);\n    }\n    goToSlide(index) {\n        if (index < 0 || index >= this.items().length || index === this.currentIndex())\n            return;\n        this.currentIndex.set(index);\n        this.slideChange.emit({ currentIndex: index, item: this.items()[index] });\n        // Reset autoplay progress\n        if (this.config().autoplay) {\n            this.resetAutoplay();\n        }\n        // Reset transition state after animation\n        setTimeout(() => {\n            this.isTransitioning.set(false);\n        }, 500);\n    }\n    trackByFn(index, item) {\n        return item.id;\n    }\n    onItemClick(item) {\n        this.carouselClick.emit(item);\n    }\n    setupAutoplay() {\n        if (!this.config().autoplay || this.items().length <= 1)\n            return;\n        this.autoplayInterval = window.setInterval(() => {\n            this.next();\n        }, this.config().autoplaySpeed);\n    }\n    resetAutoplay() {\n        this.clearAutoplay();\n        this.setupAutoplay();\n    }\n    clearAutoplay() {\n        if (this.autoplayInterval) {\n            clearInterval(this.autoplayInterval);\n            this.autoplayInterval = undefined;\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: NgCustomCarousel, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.1.0\", version: \"20.1.7\", type: NgCustomCarousel, isStandalone: true, selector: \"ng-custom-carousel\", inputs: { items: { classPropertyName: \"items\", publicName: \"items\", isSignal: true, isRequired: false, transformFunction: null }, config: { classPropertyName: \"config\", publicName: \"config\", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { slideChange: \"slideChange\", carouselClick: \"carouselClick\" }, ngImport: i0, template: \"<div class=\\\"ng-carousel-container\\\" [style.width]=\\\"config().width\\\" [style.height]=\\\"config().height\\\">\\r\\n  <!-- Carousel Wrapper -->\\r\\n  <div class=\\\"ng-carousel-wrapper\\\" \\r\\n       [style.transform]=\\\"'translateX(' + (-currentIndex() * 100) + '%)'\\\"\\r\\n       [style.transition]=\\\"isTransitioning() ? 'transform 0.5s ease-in-out' : 'none'\\\">\\r\\n    <div class=\\\"ng-carousel-slide\\\" \\r\\n         *ngFor=\\\"let item of items(); trackBy: trackByFn\\\"\\r\\n         [style.background-image]=\\\"item.image ? 'url(' + item.image + ')' : 'none'\\\">\\r\\n      <div class=\\\"ng-carousel-content\\\" *ngIf=\\\"config().showTitle || config().showDescription\\\">\\r\\n        <h3 *ngIf=\\\"config().showTitle && item.title\\\" class=\\\"ng-carousel-title\\\">\\r\\n          {{ item.title }}\\r\\n        </h3>\\r\\n        <p *ngIf=\\\"config().showDescription && item.description\\\" class=\\\"ng-carousel-description\\\">\\r\\n          {{ item.description }}\\r\\n        </p>\\r\\n        <a *ngIf=\\\"item.link\\\" [href]=\\\"item.link\\\" class=\\\"ng-carousel-link\\\">Learn More</a>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- Navigation Arrows -->\\r\\n  <div *ngIf=\\\"config().showArrows && items().length > 1\\\" class=\\\"ng-carousel-arrows\\\">\\r\\n    <button class=\\\"ng-carousel-arrow ng-carousel-arrow-prev\\\" \\r\\n            (click)=\\\"previous()\\\" \\r\\n            [disabled]=\\\"!config().infinite && currentIndex() === 0\\\">\\r\\n      <svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\">\\r\\n        <path d=\\\"M15 18l-6-6 6-6\\\"/>\\r\\n      </svg>\\r\\n    </button>\\r\\n    <button class=\\\"ng-carousel-arrow ng-carousel-arrow-next\\\" \\r\\n            (click)=\\\"next()\\\" \\r\\n            [disabled]=\\\"!config().infinite && currentIndex() === items().length - 1\\\">\\r\\n      <svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\">\\r\\n        <path d=\\\"M9 18l6-6-6-6\\\"/>\\r\\n      </svg>\\r\\n    </button>\\r\\n  </div>\\r\\n\\r\\n  <!-- Indicators -->\\r\\n  <div *ngIf=\\\"config().showIndicators && items().length > 1\\\" class=\\\"ng-carousel-indicators\\\">\\r\\n    <button *ngFor=\\\"let item of items(); let i = index\\\" \\r\\n            class=\\\"ng-carousel-indicator\\\"\\r\\n            [class.active]=\\\"i === currentIndex()\\\"\\r\\n            (click)=\\\"goToSlide(i)\\\"\\r\\n            [attr.aria-label]=\\\"'Go to slide ' + (i + 1)\\\">\\r\\n    </button>\\r\\n  </div>\\r\\n\\r\\n  <!-- Progress Bar for Autoplay -->\\r\\n  <div *ngIf=\\\"config().autoplay && items().length > 1\\\" class=\\\"ng-carousel-progress\\\">\\r\\n    <div class=\\\"ng-carousel-progress-bar\\\" \\r\\n         [style.width]=\\\"progressWidth() + '%'\\\"\\r\\n         [style.transition]=\\\"'width ' + config().autoplaySpeed + 'ms linear'\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n</div> \", styles: [\".ng-carousel-container{position:relative;overflow:hidden;border-radius:8px;box-shadow:0 4px 20px #0000001a}.ng-carousel-wrapper{display:flex;transition:transform .5s ease-in-out;height:100%}.ng-carousel-slide{min-width:100%;height:100%;background-size:cover;background-position:center;background-repeat:no-repeat;position:relative;display:flex;align-items:center;justify-content:center}.ng-carousel-content{text-align:center;color:#fff;padding:2rem;background:#00000080;border-radius:8px;-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px);max-width:80%}.ng-carousel-title{font-size:2rem;font-weight:700;margin:0 0 1rem;text-shadow:2px 2px 4px rgba(0,0,0,.7)}.ng-carousel-description{font-size:1.1rem;margin:0 0 1.5rem;line-height:1.6;text-shadow:1px 1px 2px rgba(0,0,0,.7)}.ng-carousel-link{display:inline-block;padding:.75rem 1.5rem;background:#007bff;color:#fff;text-decoration:none;border-radius:25px;font-weight:500;transition:all .3s ease;border:2px solid transparent}.ng-carousel-link:hover{background:#0056b3;transform:translateY(-2px);box-shadow:0 4px 15px #007bff66}.ng-carousel-arrows{position:absolute;top:50%;left:0;right:0;transform:translateY(-50%);display:flex;justify-content:space-between;padding:0 1rem;pointer-events:none}.ng-carousel-arrow{width:48px;height:48px;border:none;border-radius:50%;background:#ffffffe6;color:#333;cursor:pointer;display:flex;align-items:center;justify-content:center;transition:all .3s ease;pointer-events:auto;box-shadow:0 2px 10px #0003}.ng-carousel-arrow:hover:not(:disabled){background:#fff;transform:scale(1.1);box-shadow:0 4px 20px #0000004d}.ng-carousel-arrow:disabled{opacity:.5;cursor:not-allowed}.ng-carousel-indicators{position:absolute;bottom:1rem;left:50%;transform:translate(-50%);display:flex;gap:.5rem;z-index:10}.ng-carousel-indicator{width:12px;height:12px;border:none;border-radius:50%;background:#ffffff80;cursor:pointer;transition:all .3s ease}.ng-carousel-indicator:hover{background:#fffc;transform:scale(1.2)}.ng-carousel-indicator.active{background:#fff;transform:scale(1.3)}.ng-carousel-progress{position:absolute;top:0;left:0;right:0;height:3px;background:#ffffff4d;z-index:10}.ng-carousel-progress-bar{height:100%;background:linear-gradient(90deg,#007bff,#00d4ff);border-radius:0 2px 2px 0}@media (max-width: 768px){.ng-carousel-content{padding:1.5rem;max-width:90%}.ng-carousel-title{font-size:1.5rem}.ng-carousel-description{font-size:1rem}.ng-carousel-arrow{width:40px;height:40px}.ng-carousel-arrows{padding:0 .5rem}}@media (max-width: 480px){.ng-carousel-content{padding:1rem;max-width:95%}.ng-carousel-title{font-size:1.25rem}.ng-carousel-arrow{width:36px;height:36px}}\\n\"], dependencies: [{ kind: \"ngmodule\", type: CommonModule }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: NgCustomCarousel, decorators: [{\n            type: Component,\n            args: [{ selector: 'ng-custom-carousel', standalone: true, imports: [CommonModule], template: \"<div class=\\\"ng-carousel-container\\\" [style.width]=\\\"config().width\\\" [style.height]=\\\"config().height\\\">\\r\\n  <!-- Carousel Wrapper -->\\r\\n  <div class=\\\"ng-carousel-wrapper\\\" \\r\\n       [style.transform]=\\\"'translateX(' + (-currentIndex() * 100) + '%)'\\\"\\r\\n       [style.transition]=\\\"isTransitioning() ? 'transform 0.5s ease-in-out' : 'none'\\\">\\r\\n    <div class=\\\"ng-carousel-slide\\\" \\r\\n         *ngFor=\\\"let item of items(); trackBy: trackByFn\\\"\\r\\n         [style.background-image]=\\\"item.image ? 'url(' + item.image + ')' : 'none'\\\">\\r\\n      <div class=\\\"ng-carousel-content\\\" *ngIf=\\\"config().showTitle || config().showDescription\\\">\\r\\n        <h3 *ngIf=\\\"config().showTitle && item.title\\\" class=\\\"ng-carousel-title\\\">\\r\\n          {{ item.title }}\\r\\n        </h3>\\r\\n        <p *ngIf=\\\"config().showDescription && item.description\\\" class=\\\"ng-carousel-description\\\">\\r\\n          {{ item.description }}\\r\\n        </p>\\r\\n        <a *ngIf=\\\"item.link\\\" [href]=\\\"item.link\\\" class=\\\"ng-carousel-link\\\">Learn More</a>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- Navigation Arrows -->\\r\\n  <div *ngIf=\\\"config().showArrows && items().length > 1\\\" class=\\\"ng-carousel-arrows\\\">\\r\\n    <button class=\\\"ng-carousel-arrow ng-carousel-arrow-prev\\\" \\r\\n            (click)=\\\"previous()\\\" \\r\\n            [disabled]=\\\"!config().infinite && currentIndex() === 0\\\">\\r\\n      <svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\">\\r\\n        <path d=\\\"M15 18l-6-6 6-6\\\"/>\\r\\n      </svg>\\r\\n    </button>\\r\\n    <button class=\\\"ng-carousel-arrow ng-carousel-arrow-next\\\" \\r\\n            (click)=\\\"next()\\\" \\r\\n            [disabled]=\\\"!config().infinite && currentIndex() === items().length - 1\\\">\\r\\n      <svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\">\\r\\n        <path d=\\\"M9 18l6-6-6-6\\\"/>\\r\\n      </svg>\\r\\n    </button>\\r\\n  </div>\\r\\n\\r\\n  <!-- Indicators -->\\r\\n  <div *ngIf=\\\"config().showIndicators && items().length > 1\\\" class=\\\"ng-carousel-indicators\\\">\\r\\n    <button *ngFor=\\\"let item of items(); let i = index\\\" \\r\\n            class=\\\"ng-carousel-indicator\\\"\\r\\n            [class.active]=\\\"i === currentIndex()\\\"\\r\\n            (click)=\\\"goToSlide(i)\\\"\\r\\n            [attr.aria-label]=\\\"'Go to slide ' + (i + 1)\\\">\\r\\n    </button>\\r\\n  </div>\\r\\n\\r\\n  <!-- Progress Bar for Autoplay -->\\r\\n  <div *ngIf=\\\"config().autoplay && items().length > 1\\\" class=\\\"ng-carousel-progress\\\">\\r\\n    <div class=\\\"ng-carousel-progress-bar\\\" \\r\\n         [style.width]=\\\"progressWidth() + '%'\\\"\\r\\n         [style.transition]=\\\"'width ' + config().autoplaySpeed + 'ms linear'\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n</div> \", styles: [\".ng-carousel-container{position:relative;overflow:hidden;border-radius:8px;box-shadow:0 4px 20px #0000001a}.ng-carousel-wrapper{display:flex;transition:transform .5s ease-in-out;height:100%}.ng-carousel-slide{min-width:100%;height:100%;background-size:cover;background-position:center;background-repeat:no-repeat;position:relative;display:flex;align-items:center;justify-content:center}.ng-carousel-content{text-align:center;color:#fff;padding:2rem;background:#00000080;border-radius:8px;-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px);max-width:80%}.ng-carousel-title{font-size:2rem;font-weight:700;margin:0 0 1rem;text-shadow:2px 2px 4px rgba(0,0,0,.7)}.ng-carousel-description{font-size:1.1rem;margin:0 0 1.5rem;line-height:1.6;text-shadow:1px 1px 2px rgba(0,0,0,.7)}.ng-carousel-link{display:inline-block;padding:.75rem 1.5rem;background:#007bff;color:#fff;text-decoration:none;border-radius:25px;font-weight:500;transition:all .3s ease;border:2px solid transparent}.ng-carousel-link:hover{background:#0056b3;transform:translateY(-2px);box-shadow:0 4px 15px #007bff66}.ng-carousel-arrows{position:absolute;top:50%;left:0;right:0;transform:translateY(-50%);display:flex;justify-content:space-between;padding:0 1rem;pointer-events:none}.ng-carousel-arrow{width:48px;height:48px;border:none;border-radius:50%;background:#ffffffe6;color:#333;cursor:pointer;display:flex;align-items:center;justify-content:center;transition:all .3s ease;pointer-events:auto;box-shadow:0 2px 10px #0003}.ng-carousel-arrow:hover:not(:disabled){background:#fff;transform:scale(1.1);box-shadow:0 4px 20px #0000004d}.ng-carousel-arrow:disabled{opacity:.5;cursor:not-allowed}.ng-carousel-indicators{position:absolute;bottom:1rem;left:50%;transform:translate(-50%);display:flex;gap:.5rem;z-index:10}.ng-carousel-indicator{width:12px;height:12px;border:none;border-radius:50%;background:#ffffff80;cursor:pointer;transition:all .3s ease}.ng-carousel-indicator:hover{background:#fffc;transform:scale(1.2)}.ng-carousel-indicator.active{background:#fff;transform:scale(1.3)}.ng-carousel-progress{position:absolute;top:0;left:0;right:0;height:3px;background:#ffffff4d;z-index:10}.ng-carousel-progress-bar{height:100%;background:linear-gradient(90deg,#007bff,#00d4ff);border-radius:0 2px 2px 0}@media (max-width: 768px){.ng-carousel-content{padding:1.5rem;max-width:90%}.ng-carousel-title{font-size:1.5rem}.ng-carousel-description{font-size:1rem}.ng-carousel-arrow{width:40px;height:40px}.ng-carousel-arrows{padding:0 .5rem}}@media (max-width: 480px){.ng-carousel-content{padding:1rem;max-width:95%}.ng-carousel-title{font-size:1.25rem}.ng-carousel-arrow{width:36px;height:36px}}\\n\"] }]\n        }] });\n\n/*\n * Public API Surface of custom-carousel\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgCustomCarousel };\n//# sourceMappingURL=ng-custom-carousel.mjs.map\n","map":null,"preliminaryFileName":"ng-custom-carousel.mjs","sourcemapFileName":"ng-custom-carousel.mjs.map"},{"fileName":"ng-custom-carousel.mjs.map","names":[],"needsCodeReference":false,"originalFileName":null,"originalFileNames":[],"source":"{\"version\":3,\"file\":\"ng-custom-carousel.mjs\",\"sources\":[\"../../../projects/custom-carousel/src/lib/custom-carousel.ts\",\"../../../projects/custom-carousel/src/lib/custom-carousel.component.html\",\"../../../projects/custom-carousel/src/public-api.ts\",\"../../../projects/custom-carousel/src/ng-custom-carousel.ts\"],\"sourcesContent\":[\"import { Component, OnInit, OnDestroy, signal, computed, effect, inject, ChangeDetectorRef, input, output } from '@angular/core';\\r\\nimport { CommonModule } from '@angular/common';\\r\\n\\r\\nexport interface CarouselItem {\\r\\n  id: string | number;\\r\\n  image?: string;\\r\\n  title?: string;\\r\\n  description?: string;\\r\\n  link?: string;\\r\\n  [key: string]: any;\\r\\n}\\r\\n\\r\\nexport interface CarouselConfig {\\r\\n  autoplay?: boolean;\\r\\n  autoplaySpeed?: number;\\r\\n  showArrows?: boolean;\\r\\n  showIndicators?: boolean;\\r\\n  showTitle?: boolean;\\r\\n  showDescription?: boolean;\\r\\n  infinite?: boolean;\\r\\n  responsive?: boolean;\\r\\n  height?: string;\\r\\n  width?: string;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: 'ng-custom-carousel',\\r\\n  standalone: true,\\r\\n  imports: [CommonModule],\\r\\n  templateUrl: './custom-carousel.component.html',\\r\\n  styleUrls: ['./custom-carousel.component.scss']\\r\\n})\\r\\nexport class NgCustomCarousel implements OnInit, OnDestroy {\\r\\n  // Signal-based inputs\\r\\n  items = input<CarouselItem[]>([]);\\r\\n  config = input<CarouselConfig>({\\r\\n    autoplay: true,\\r\\n    autoplaySpeed: 5000,\\r\\n    showArrows: true,\\r\\n    showIndicators: true,\\r\\n    showTitle: true,\\r\\n    showDescription: true,\\r\\n    infinite: true,\\r\\n    responsive: true,\\r\\n    height: '400px',\\r\\n    width: '100%'\\r\\n  });\\r\\n\\r\\n  // Signal-based outputs\\r\\n  slideChange = output<{ currentIndex: number; item: CarouselItem }>();\\r\\n  carouselClick = output<CarouselItem>();\\r\\n\\r\\n  private autoplayInterval?: number;\\r\\n  private cdr = inject(ChangeDetectorRef);\\r\\n\\r\\n  // Internal signals\\r\\n  currentIndex = signal(0);\\r\\n  isTransitioning = signal(false);\\r\\n  \\r\\n  // Computed signals\\r\\n  progressWidth = computed(() => {\\r\\n    if (!this.config().autoplay || this.items().length <= 1) return 0;\\r\\n    return ((this.currentIndex() + 1) / this.items().length) * 100;\\r\\n  });\\r\\n\\r\\n  ngOnInit() {\\r\\n    this.setupAutoplay();\\r\\n  }\\r\\n\\r\\n  ngOnDestroy() {\\r\\n    this.clearAutoplay();\\r\\n  }\\r\\n\\r\\n  next() {\\r\\n    if (this.items().length <= 1) return;\\r\\n    \\r\\n    this.isTransitioning.set(true);\\r\\n    const nextIndex = this.config().infinite && this.currentIndex() === this.items().length - 1 \\r\\n      ? 0 \\r\\n      : Math.min(this.currentIndex() + 1, this.items().length - 1);\\r\\n    \\r\\n    this.goToSlide(nextIndex);\\r\\n  }\\r\\n\\r\\n  previous() {\\r\\n    if (this.items().length <= 1) return;\\r\\n    \\r\\n    this.isTransitioning.set(true);\\r\\n    const prevIndex = this.config().infinite && this.currentIndex() === 0 \\r\\n      ? this.items().length - 1 \\r\\n      : Math.max(this.currentIndex() - 1, 0);\\r\\n    \\r\\n    this.goToSlide(prevIndex);\\r\\n  }\\r\\n\\r\\n  goToSlide(index: number) {\\r\\n    if (index < 0 || index >= this.items().length || index === this.currentIndex()) return;\\r\\n    \\r\\n    this.currentIndex.set(index);\\r\\n    this.slideChange.emit({ currentIndex: index, item: this.items()[index] });\\r\\n    \\r\\n    // Reset autoplay progress\\r\\n    if (this.config().autoplay) {\\r\\n      this.resetAutoplay();\\r\\n    }\\r\\n    \\r\\n    // Reset transition state after animation\\r\\n    setTimeout(() => {\\r\\n      this.isTransitioning.set(false);\\r\\n    }, 500);\\r\\n  }\\r\\n\\r\\n  trackByFn(index: number, item: CarouselItem): string | number {\\r\\n    return item.id;\\r\\n  }\\r\\n\\r\\n  onItemClick(item: CarouselItem) {\\r\\n    this.carouselClick.emit(item);\\r\\n  }\\r\\n\\r\\n  private setupAutoplay() {\\r\\n    if (!this.config().autoplay || this.items().length <= 1) return;\\r\\n    \\r\\n    this.autoplayInterval = window.setInterval(() => {\\r\\n      this.next();\\r\\n    }, this.config().autoplaySpeed);\\r\\n  }\\r\\n\\r\\n  private resetAutoplay() {\\r\\n    this.clearAutoplay();\\r\\n    this.setupAutoplay();\\r\\n  }\\r\\n\\r\\n  private clearAutoplay() {\\r\\n    if (this.autoplayInterval) {\\r\\n      clearInterval(this.autoplayInterval);\\r\\n      this.autoplayInterval = undefined;\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\",\"<div class=\\\"ng-carousel-container\\\" [style.width]=\\\"config().width\\\" [style.height]=\\\"config().height\\\">\\r\\n  <!-- Carousel Wrapper -->\\r\\n  <div class=\\\"ng-carousel-wrapper\\\" \\r\\n       [style.transform]=\\\"'translateX(' + (-currentIndex() * 100) + '%)'\\\"\\r\\n       [style.transition]=\\\"isTransitioning() ? 'transform 0.5s ease-in-out' : 'none'\\\">\\r\\n    <div class=\\\"ng-carousel-slide\\\" \\r\\n         *ngFor=\\\"let item of items(); trackBy: trackByFn\\\"\\r\\n         [style.background-image]=\\\"item.image ? 'url(' + item.image + ')' : 'none'\\\">\\r\\n      <div class=\\\"ng-carousel-content\\\" *ngIf=\\\"config().showTitle || config().showDescription\\\">\\r\\n        <h3 *ngIf=\\\"config().showTitle && item.title\\\" class=\\\"ng-carousel-title\\\">\\r\\n          {{ item.title }}\\r\\n        </h3>\\r\\n        <p *ngIf=\\\"config().showDescription && item.description\\\" class=\\\"ng-carousel-description\\\">\\r\\n          {{ item.description }}\\r\\n        </p>\\r\\n        <a *ngIf=\\\"item.link\\\" [href]=\\\"item.link\\\" class=\\\"ng-carousel-link\\\">Learn More</a>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- Navigation Arrows -->\\r\\n  <div *ngIf=\\\"config().showArrows && items().length > 1\\\" class=\\\"ng-carousel-arrows\\\">\\r\\n    <button class=\\\"ng-carousel-arrow ng-carousel-arrow-prev\\\" \\r\\n            (click)=\\\"previous()\\\" \\r\\n            [disabled]=\\\"!config().infinite && currentIndex() === 0\\\">\\r\\n      <svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\">\\r\\n        <path d=\\\"M15 18l-6-6 6-6\\\"/>\\r\\n      </svg>\\r\\n    </button>\\r\\n    <button class=\\\"ng-carousel-arrow ng-carousel-arrow-next\\\" \\r\\n            (click)=\\\"next()\\\" \\r\\n            [disabled]=\\\"!config().infinite && currentIndex() === items().length - 1\\\">\\r\\n      <svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\">\\r\\n        <path d=\\\"M9 18l6-6-6-6\\\"/>\\r\\n      </svg>\\r\\n    </button>\\r\\n  </div>\\r\\n\\r\\n  <!-- Indicators -->\\r\\n  <div *ngIf=\\\"config().showIndicators && items().length > 1\\\" class=\\\"ng-carousel-indicators\\\">\\r\\n    <button *ngFor=\\\"let item of items(); let i = index\\\" \\r\\n            class=\\\"ng-carousel-indicator\\\"\\r\\n            [class.active]=\\\"i === currentIndex()\\\"\\r\\n            (click)=\\\"goToSlide(i)\\\"\\r\\n            [attr.aria-label]=\\\"'Go to slide ' + (i + 1)\\\">\\r\\n    </button>\\r\\n  </div>\\r\\n\\r\\n  <!-- Progress Bar for Autoplay -->\\r\\n  <div *ngIf=\\\"config().autoplay && items().length > 1\\\" class=\\\"ng-carousel-progress\\\">\\r\\n    <div class=\\\"ng-carousel-progress-bar\\\" \\r\\n         [style.width]=\\\"progressWidth() + '%'\\\"\\r\\n         [style.transition]=\\\"'width ' + config().autoplaySpeed + 'ms linear'\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n</div> \",\"/*\\r\\n * Public API Surface of custom-carousel\\r\\n */\\r\\n\\r\\nexport * from './lib/custom-carousel';\\r\\n\",\"/**\\n * Generated bundle index. Do not edit.\\n */\\n\\nexport * from './public-api';\\n\"],\"names\":[],\"mappings\":\"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\"}","type":"asset"}]}